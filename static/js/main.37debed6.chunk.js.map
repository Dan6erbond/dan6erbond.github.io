{"version":3,"sources":["components/Header/Navigation.tsx","components/Footer/Footer.tsx","components/Layout.tsx","components/pages/Home/Timeline.tsx","components/pages/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Navigation","React","useState","menuOpacity","setMenuOpacity","menuVisibility","setMenuVisibility","disableMenu","setTimeout","Navbar","bg","to","Brand","alt","src","width","height","className","Toggle","Collapse","onClick","icon","faBars","style","opacity","visibility","faTimes","Footer","Fragment","Layout","props","children","timelineElements","active","name","subtitle","description","date","faBuilding","faSchool","Timeline","map","e","i","key","undefined","Home","aboutRef","useRef","ref","window","scrollTo","current","offsetTop","faArrowAltCircleDown","margin","App","path","exact","Boolean","location","hostname","match","hashHistory","createHashHistory","ReactDOM","render","history","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37debed6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faBars, faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Navigation.scss';\r\n\r\nexport default function Navigation() {\r\n    const [menuOpacity, setMenuOpacity] = React.useState<number>(0);\r\n    const [menuVisibility, setMenuVisibility] = React.useState<\"visible\" | \"hidden\">(\"hidden\");\r\n\r\n    const enableMenu = () => {\r\n        setMenuOpacity(1);\r\n        setMenuVisibility(\"visible\");\r\n    };\r\n\r\n    const disableMenu = () => {\r\n        setMenuOpacity(0);\r\n        setTimeout(() => setMenuVisibility(\"hidden\"), 500);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"white\">\r\n                <Link to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <img alt=\"logo\"\r\n                             src=\"/res/img/logo/logo - green.png\"\r\n                             width=\"30\"\r\n                             height=\"30\"\r\n                             className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                        RaviAnand\r\n                    </Navbar.Brand>\r\n                </Link>\r\n                <Navbar.Toggle/>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n            <div className=\"menu-button\" onClick={() => enableMenu()}>\r\n                <FontAwesomeIcon icon={faBars}/>\r\n            </div>\r\n\r\n            <div className=\"menu\" style={{opacity: menuOpacity, visibility: menuVisibility}}\r\n                 onClick={() => disableMenu()}>\r\n                <Link to=\"/\">\r\n                    <Navbar.Brand className=\"logo\">\r\n                        <img alt=\"logo\"\r\n                             src=\"/res/img/logo/logo - green.png\"\r\n                             width=\"30\"\r\n                             height=\"30\"\r\n                             className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                        RaviAnand\r\n                    </Navbar.Brand>\r\n                </Link>\r\n                <div className=\"menu-close-button\" onClick={() => disableMenu()}>\r\n                    <FontAwesomeIcon icon={faTimes}/>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/projects\">Projects</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/resume\">Resume</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from \"react\";\r\nimport Navigation from \"./Header/Navigation\";\r\nimport Footer from \"./Footer/Footer\";\r\n\r\ninterface LayoutProps {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function Layout(props: LayoutProps) {\r\n    return (\r\n        <React.Fragment>\r\n            <Navigation/>\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n            <Footer/>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport {VerticalTimeline, VerticalTimelineElement} from \"react-vertical-timeline-component\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBuilding, faSchool} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./Timeline.scss\";\r\n\r\ninterface TimelineElement {\r\n    date: string;\r\n    name: string;\r\n    subtitle?: string;\r\n    description?: string;\r\n    active: boolean;\r\n    icon: JSX.Element;\r\n}\r\n\r\nconst timelineElements: TimelineElement[] = [{\r\n    active: false,\r\n    name: \"BlueMouse GmbH\",\r\n    subtitle: \"Internship\",\r\n    description: \"Will spend a year as an internet at the BlueMouse GmbH developing websites.\",\r\n    date: \"2020 - 2021\",\r\n    icon: <FontAwesomeIcon style={{width: '24px'}}\r\n                           icon={faBuilding}/>\r\n}, {\r\n    active: true,\r\n    name: \"IMS Aarau\",\r\n    subtitle: \"Highschool\",\r\n    description: \"Studying at the IT highschool in Aarau with a focus on software development.\",\r\n    date: \"2017 - present\",\r\n    icon: <FontAwesomeIcon style={{width: '24px'}}\r\n                           icon={faSchool}/>\r\n}, {\r\n    active: false,\r\n    name: \"Bezirksschule Zofingen\",\r\n    subtitle: \"Junior High School\",\r\n    description: \"Studied at the junior highschool in Zofingen and started taking computer science courses.\",\r\n    date: \"2013 - 2017\",\r\n    icon: <FontAwesomeIcon style={{width: '24px'}}\r\n                           icon={faSchool}/>\r\n}, {\r\n    active: false,\r\n    name: \"Quartierschule MÃ¼hlethal\",\r\n    subtitle: \"Primary School\",\r\n    date: \"2009 - 2013\",\r\n    description: \"Skipped the 5th grade in primary school.\",\r\n    icon: <FontAwesomeIcon style={{width: '24px'}}\r\n                           icon={faSchool}/>\r\n}];\r\n\r\nexport default function Timeline() {\r\n    return (\r\n        <React.Fragment>\r\n            <VerticalTimeline>\r\n                {timelineElements.map((e, i) => <VerticalTimelineElement key={i}\r\n                                                                         className={e.active ? \"vertical-timeline-element-active\" : undefined}\r\n                                                                         date={e.date}\r\n                                                                         icon={e.icon}>\r\n                    <h3 className=\"vertical-timeline-element-title\">{e.name}</h3>\r\n                    {e.subtitle ? <h4 className=\"vertical-timeline-element-subtitle\">{e.subtitle}</h4> : null}\r\n                    {e.description ? <p>\r\n                        {e.description}\r\n                    </p> : null}\r\n                </VerticalTimelineElement>)}\r\n            </VerticalTimeline>\r\n        </React.Fragment>\r\n    );\r\n}","import React, {RefObject} from 'react';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowAltCircleDown} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport './Home.scss';\r\nimport Timeline from \"./Timeline\";\r\n\r\nexport default function Home() {\r\n    const aboutRef = React.useRef(null);\r\n\r\n    const scrollToRef = (ref: RefObject<HTMLDivElement>) => window.scrollTo(0, ref.current!!.offsetTop);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"full-page center\">\r\n                <div className=\"content\">\r\n                    <div className=\"banner\">\r\n                        <div className=\"banner-content\">\r\n                            <div className=\"banner-image\"/>\r\n                            <div className=\"content-container\">\r\n                                <h2 className=\"banner-title\">RaviAnand Mohabir</h2>\r\n                                <p className=\"banner-text\">\r\n                                    An engineering student in Switzerland, experienced with Java, C# and\r\n                                    Python.\r\n                                </p>\r\n                                <div className=\"scroll-down\">\r\n                                    <button onClick={() => scrollToRef(aboutRef)}>\r\n                                        <FontAwesomeIcon icon={faArrowAltCircleDown}/>\r\n                                    </button>\r\n                                    <span>About Me</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"full-page\" ref={aboutRef}>\r\n                <div className=\"content\">\r\n                    <h2>About Me</h2>\r\n                    <br/>\r\n                    <div className=\"profile-img\"/>\r\n                    <br/>\r\n                    <p style={{margin: 0}}>\r\n                        I'm a motivated engineering student with a passion for computer sciences and digital media.\r\n                        Seeking to work on creating reliable systems and interesting technology.\r\n                        Created many systems used by others such as the Fuzzle search algorithm.\r\n                    </p>\r\n                    <Timeline/>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\nimport Layout from \"./components/Layout\";\nimport {Route, Switch} from \"react-router\";\nimport Home from \"./components/pages/Home/Home\";\n\nfunction App() {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home/>\n                </Route>\n            </Switch>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Router} from \"react-router-dom\";\nimport { createHashHistory } from 'history'\n\nimport './index.scss';\nimport 'react-vertical-timeline-component/style.min.css';\n\nconst hashHistory = createHashHistory();\n\nReactDOM.render(\n    <Router history={hashHistory}>\n        <App/>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}